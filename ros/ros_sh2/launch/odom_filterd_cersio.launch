<?xml version="1.0"?>

<launch>
  <param name="pub_map_odom_transform" value="true"/> 
  <param name="map_frame" value="map"/> 
  <param name="base_frame" value="base_frame"/> 
  <param name="odom_frame" value="odom"/>

<!--
  <param name="/use_sim_time" value="true"/>
-->

  <node pkg="tf" type="static_transform_publisher" name="map_2_odom" args="0 0 0 0 0 0 /map /odom 100"/>
  
<!--
  <node pkg="tf" type="static_transform_publisher" name="base_footprint_2_base_link" args="0 0 0 0 0 0 /odom /base_link 100"/> 
  <node pkg="tf" type="static_transform_publisher" name="base_link_2_base_stabilized_link" args="0 0 0 0 0 0 /base_link /base_stabilized 100"/> 
  <node pkg="tf" type="static_transform_publisher" name="base_stablized_2_base_frame" args="0 0 0 0 0 0 /base_stabilized /base_frame 100"/> 
  <node pkg="tf" type="static_transform_publisher" name="base_frame_2_laser_link" args="0 0 0 0 0 0 /base_frame /laser 100"/> 
  <node pkg="tf" type="static_transform_publisher" name="base_2_nav_link" args="0 0 0 0 0 0 /base_frame /nav 100"/>
-->

  <node pkg="ros_sh2" type="comm_sh2.py" name="communication_sh2_serial"/>
  <node pkg="ros_sh2" type="baselink_pub.py" name="baselink_pub"/>
  <node pkg="ros_sh2" type="wheel_odometry_cersio.py" name="wheel_odometry"/>


<!--
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization">
    <rosparam command="load" file="$(find amcl_example)/launch/localization.yaml" />
  </node>

  <node pkg="amcl_example" type="wheel_odometry_benz.py" name="wheel_odometry"/>
-->

</launch>
