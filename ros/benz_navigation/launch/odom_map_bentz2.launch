<?xml version="1.0"?>

<launch>
  <param name="pub_map_odom_transform" value="true"/> 
  <param name="map_frame" value="map"/> 
  <param name="base_frame" value="base_frame"/> 
  <param name="odom_frame" value="odom"/>

  <!-- LRF(urg) -->
  <node pkg="urg_node" type="urg_node" name="urg_node" args="/last:=/base_scan">
    <param name="ip_address" value="192.168.1.10"/>
  </node>

  <!-- LRF rear (urg) -->
  <node pkg="urg_node" type="urg_node" name="urg_node_rear" args="/last:=/base_scan2">
    <param name="ip_address" value="192.168.1.11"/>
    <param name="frame_id" value="laser_rear"/>
  </node>


  <!-- tf -->
<!--
  <node pkg="tf" type="static_transform_publisher" name="map_2_odom" args="0 0 0 0 0 0 /map /odom 100"/>
  <node pkg="tf" type="static_transform_publisher" name="base_footprint_2_base_link" args="0 0 0 0 0 0 /odom /base_link 100"/> 
-->
  <node pkg="tf" type="static_transform_publisher" name="base_link_2_base_stabilized_link" args="0 0 0 0 0 0 /base_link /base_stabilized 100"/> 
  <node pkg="tf" type="static_transform_publisher" name="base_stablized_2_base_frame" args="0 0 0 0 0 0 /base_stabilized /base_frame 100"/> 
  <node pkg="tf" type="static_transform_publisher" name="base_frame_2_laser_link" args="0 0 0 0 0 3.1415 /base_frame /laser 100"/>
  <node pkg="tf" type="static_transform_publisher" name="base_frame_2_laser_rear_link" args="-1.05 0 0 3.1415 0 0 /base_frame /laser_rear 100"/>
  <node pkg="tf" type="static_transform_publisher" name="base_frame_2_laser_marged_link" args="0 0 0 0 0 0 /base_frame /merged_lrf 100"/>
  <node pkg="tf" type="static_transform_publisher" name="base_2_nav_link" args="0 0 0 0 0 0 /base_frame /nav 100"/>

  <!-- map file -->
  <arg name="map_file" default="$(find benz_navigation)/maps/tsukuba201711031600.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <!-- ekf_localization -->
<!--
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization">
    <rosparam command="load" file="$(find amcl_example)/launch/localization.yaml" />
  </node>
-->

  <!-- ScanMarger -->
  <node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen">
    <param name="destination_frame" value="/merged_lrf"/>
    <param name="cloud_destination_topic" value="/merged_cloud"/>
    <param name="scan_destination_topic" value="/scan"/>
    <param name="laserscan_topics" value ="/base_scan /base_scan2" /> <!-- LIST OF THE LASER SCAN TOPICS TO SUBSCRIBE -->
    <param name="angle_min" type="double" value="-3.14" />
    <param name="angle_max" type="double" value="3.14" />
    <param name="range_max" type="double" value="60.0" />
    <param name="range_min" type="double" value="0.13" />
  </node>

  <!-- RotaryEncorder to odom -->
  <node pkg="benz_navigation" type="wheel_odometry_benz.py" name="wheel_odometry_benz"/>

  <!-- baselonk_publisher -->
  <node pkg="rosif" type="baselink_pub.py" name="baselink_publisher"/>

  <!-- amcl (timed launch mapfile load wait) -->
<!-- does not worked
ã€€ <include file="$(find timed_roslaunch)/launch/timed_roslaunch.launch">
    <arg name="time" value="2" />
    <arg name="pkg" value="amcl_example" />
    <arg name="file" value="amcl_diff.launch" />
    <arg name="node_name" value="amcl_diff" />
    <arg name="value" value="output:=screen" />
  </include>
-->

</launch>
